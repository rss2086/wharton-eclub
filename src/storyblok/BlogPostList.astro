---
import { storyblokEditable } from '@storyblok/astro'
import { useStoryblokApi } from '@storyblok/astro'
import Split from '../components/blog/Split';
import Featured from '../components/blog/Featured.astro';
import FeaturedPosts from '../components/blog/FeaturedPosts.astro';
import Contact from '../components/blog/Contact.astro';

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get('cdn/stories', {
  version: "published",
  content_type: 'blogPost',
  resolve_relations:'blogPost.author'
})

export interface BlogPost {
  name: string;
  created_at: string;
  published_at: string;
  id: number;
  uuid: string;
  content: {
    _uid: string;
    tags: string[];
    title: string;
    author: string[];
    content: any;
    subtitle: string;
    component: string;
    description: string;
    featuredImage: any;
    _editable: string;
    isFeatured:boolean;
  };
  slug: string;
  full_slug: string;
  sort_by_date: string;
  position: number;
  tag_list: string[];
  is_startpage: boolean;
  parent_id: number;
  meta_data: any;
  group_id: string;
  first_published_at: string;
  release_id: string;
  lang: string;
  path: string;
  alternates: any[];
  default_full_slug: string;
  translated_slugs: any;
}

const featuredBlogPosts = data.stories.filter((story:BlogPost) => story.content.isFeatured === true)
const nonFeaturedBlogPosts = data.stories.filter((story:BlogPost) => story.content.isFeatured === false)

const { blok } = Astro.props
---
<FeaturedPosts featuredPosts={featuredBlogPosts}/>
<Split featuredPosts={nonFeaturedBlogPosts}/>
<ul {...storyblokEditable(blok)} class="prose max-w-lg mx-auto">
</ul>
<Contact/>